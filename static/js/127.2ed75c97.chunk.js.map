{"version":3,"file":"static/js/127.2ed75c97.chunk.js","mappings":"mJACA,QAAyB,2BAAzB,EAA6D,2B,aCE7D,MAaA,EAboBA,IAEZC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC1BH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAE,YAAAC,OAAcP,EAAMQ,IAC3BN,UAAWO,GAAWA,EAAQC,SAC1BP,EACA,KAAKC,SACRJ,EAAMW,SCTvB,GAAgB,QAAU,yBAAyB,SAAW,2BCA9D,EAA0B,yBCW1B,EATiBX,IAETY,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKY,IAAI,gEAAgEC,IAAI,KAC5Ed,EAAMe,W,2CCDnB,MAAMC,GAAYC,EAAAA,EAAAA,GAAiB,KAcnC,GAAeC,EAAAA,EAAAA,GAAU,CACrBC,KAAM,2BADV,EAZwBnB,IAEhBY,EAAAA,EAAAA,MAAA,QAAMQ,SAAUpB,EAAMqB,aAAajB,SAAA,EAC/BH,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACdC,SAAU,CAACC,EAAAA,EAAUV,GACrBL,KAAK,iBACLgB,YAAY,gBAChB1B,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,eC2BpB,EAjCiBJ,IACb,IAAI4B,EAAQ5B,EAAM6B,YAOdC,EAAgBF,EAAMG,QAAQC,KAAIC,IAClChC,EAAAA,EAAAA,KAACiC,EAAU,CACPhC,UAAWC,EAAOgC,cAClBxB,KAAMsB,EAAKtB,KACXH,GAAIyB,EAAKzB,OAGb4B,EAAiBR,EAAMS,SAASL,KAAKC,IACrChC,EAAAA,EAAAA,KAACqC,EAAO,CAACvB,QAASkB,EAAKlB,YAG3B,OACIH,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAO4B,QAAQ3B,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOoC,eAAenC,SACjC0B,KAELlB,EAAAA,EAAAA,MAAA,OAAKV,UAAWC,EAAOkC,SAASjC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAAG,SAAMgC,KACNnC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOqC,WAAWpC,UAC9BH,EAAAA,EAAAA,KAACwC,EAAc,CAACrB,SAxBXsB,IACjBC,QAAQC,IAAIF,GACZ1C,EAAM6C,YAAYH,EAAOI,eAAe,WAyBlC,E,6CC7BcC,EAAAA,EAAAA,GAAiBC,GAE7C,MAcA,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfqBtB,IACd,CACHC,YAAaD,EAAMC,gBAICsB,IACjB,CACHN,YAAcC,IACVK,GAASC,EAAAA,EAAAA,GAAmBN,GAAgB,MAOpDC,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/Components/Dialogs/DialogItem/DialogItem.module.scss?0892","Components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/Components/Dialogs/Dialogs.module.scss?d5e3","webpack://my-app/./src/Components/Dialogs/Message/Message.module.scss?61c0","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__+V66+\",\"active\":\"DialogItem_active__QADc-\"};","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./DialogItem.module.scss\"\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={styles.dialog}>\r\n            <NavLink to={`/dialogs/${props.id}`}\r\n                className={navData => navData.isActive ?\r\n                    styles.active :\r\n                    null}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__TdKTL\",\"messages\":\"Dialogs_messages__6xh4F\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__FtvJf\"};","import React from \"react\";\r\nimport styles from \"./Message.module.scss\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            <img src=\"https://www.emojiall.com/en/svg-to-png/twitter/1920/1f437.png\" alt=\"\" />\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./AddMessageForm.module.scss\"\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                validate={[required, maxLength]}\r\n                name=\"newMessageBody\"\r\n                placeholder=\"Message...\" />\r\n            <button>aboba</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: \"dialog-add-message-form\"\r\n})(AddMessageForm);","import styles from \"./Dialogs.module.scss\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let addNewMessage = (values) => {\r\n        console.log(values);\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let DialogElement = state.dialogs.map(data =>\r\n        <DialogItem\r\n            className={styles.dialogs__item}\r\n            name={data.name}\r\n            id={data.id}\r\n        />)\r\n\r\n    let MessageElement = state.messages.map((data) =>\r\n        <Message message={data.message} />\r\n    )\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogs__items}>\r\n                {DialogElement}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{MessageElement}</div>\r\n                <div className={styles.input_area}>\r\n                    <AddMessageForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"names":["props","_jsx","className","styles","children","NavLink","to","concat","id","navData","isActive","name","_jsxs","src","alt","message","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","DialogElement","dialogs","map","data","DialogItem","dialogs__item","MessageElement","messages","Message","dialogs__items","input_area","AddMessageForm","values","console","log","sendMessage","newMessageBody","withAuthRedirect","Dialogs","compose","connect","dispatch","sendMessageCreator"],"sourceRoot":""}